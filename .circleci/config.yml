version: 2.1

jobs:
  install_deps:
    working_directory: ~/saulo.dev
    resource_class: small
    docker:
      - image: cimg/node:20.3.1
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-2-{{ checksum "yarn.lock" }}
      - run:
          name: yarn installing things
          command: |
            yarn install --frozen-lockfile --cache-folder ~/saulo.dev/.cache/yarn
            npm rebuild
      - save_cache:
          key: dependency-cache-2-{{ checksum "yarn.lock" }}
          paths:
            -  ~/saulo.dev/.cache/yarn
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - "packages/*/*/node_modules" # https://golang.org/pkg/path/filepath/#Match

  build:
    working_directory: ~/saulo.dev
    resource_class: large
    docker:
      - image: cimg/node:20.3.1
    steps:
      - checkout
      - attach_workspace:
          at: ~/saulo.dev
      - run:
          name: build stuff
          command: NODE_OPTIONS=--max-old-space-size=4096 yarn blog:build
      - persist_to_workspace:
          root: .
          paths:
            - packages/blog/public

  lint:
    working_directory: ~/saulo.dev
    docker:
      - image: cimg/node:20.3.1
    steps:
      - checkout
      - attach_workspace:
          at: ~/saulo.dev
      - run:
          name: lint
          command: yarn lint

  deploy:
    working_directory: ~/saulo.dev
    resource_class: small
    docker:
      - image: banst/awscli:1.18.0
    environment:
      BUCKET_NAME: saulo.dev
      BUCKET_REGION: us-east-1
    steps:
      - checkout
      - attach_workspace:
          at: ~/saulo.dev
      - run:
          name: Deploy to s3!
          command: sh scripts/s3-deploy.sh
  ping:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      - run:
          name: "This job exists only so CircleCI doesn't trigger errors when no workflow runs"
          command: "echo OK"
workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - install_deps
      - build:
          requires:
            - install_deps
          filters:
             branches:
               only: main
      # - lint:
      #     requires:
      #       - install_deps
      - deploy:
          requires:
            - build
          filters:
             branches:
               only: main
  ping:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - this-fixes-the-no-workflow-error-in-circle-ci
    jobs:
      - ping
