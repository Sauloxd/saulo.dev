{"version":3,"file":"component---src-pages-index-tsx-30175a49e10a2dcd7e02.js","mappings":"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","sources":["webpack://@saulo.dev/blog/../ui/src/components/avatar/Me.png","webpack://@saulo.dev/blog/../ui/src/components/avatar/Avatar.tsx","webpack://@saulo.dev/blog/../ui/src/services/useMedia.ts","webpack://@saulo.dev/blog/../ui/src/components/icons/iconAsLink.tsx","webpack://@saulo.dev/blog/../ui/src/components/icons/IconLinkedin.tsx","webpack://@saulo.dev/blog/./src/components/links/LinkLinkedin.tsx","webpack://@saulo.dev/blog/../ui/src/components/icons/IconEmail.tsx","webpack://@saulo.dev/blog/./src/components/links/LinkEmail.tsx","webpack://@saulo.dev/blog/../ui/src/components/icons/IconGithub.tsx","webpack://@saulo.dev/blog/./src/components/links/LinkGithub.tsx","webpack://@saulo.dev/blog/./src/pages/index.tsx","webpack://@saulo.dev/blog/../ui/src/components/hexagon/Hexagon.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/Me-3a63583a317195af6a8f582362146a01.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport MePng from './Me.png';\nimport Hexagon from '../hexagon/Hexagon';\n\ninterface AvatarProps {\n  className?: string;\n  size?: number;\n  src?: string;\n}\n\nconst StyledImg = styled.img<{index: number; size: number}>`\n  width: ${p => p.size * Math.sqrt(3)/2}px;\n  height: ${p => p.size}px;\n  top: 50%;\n  left: 50%;\n  position: absolute;\n  transform: translate(-50%, -50%) ${p => `rotate(${p.index * -1 * 60}deg)`};\n`;\n\nconst Avatar: React.FC<AvatarProps> = ({\n  size,\n  src // Only 1:1 ratio images!\n}) => {\n  const getInsidePiece = (index: number): React.ReactElement => <StyledImg index={index} size={size} src={src || MePng}/>;\n  return (\n    <Hexagon layers={['primaryAccessory', 'primary', {\n      color: 'primaryAccessory',\n      innerPiece: getInsidePiece\n    }]} size={size}/>\n  );\n};\n\nexport default Avatar;\n","import { useState, useEffect } from 'react';\n\n// based on https://stackblitz.com/edit/react-hook-usemedia\nconst useMedia = (query: string) => {\n  const [matches, setMatches] = useState(\n    null);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n\n    const listener = () => setMatches(media.matches);\n    media.addListener(listener);\n\n    return () => media.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport default useMedia;\n","import React, { AnchorHTMLAttributes } from 'react';\nimport styled from 'styled-components';\nimport { COLORS } from '../../theme/colors';\n\nexport interface IconCommonInterface {\n  size?: number;\n  color?: keyof typeof COLORS;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst asLink = <T extends IconCommonInterface>(Component: any)  => {\n  const IconAsAnchor = styled.a`\n    cursor: pointer;\n    ${Component} {\n      transition: color 0.3s;\n      :hover {\n        color: ${p => p.theme.colors.primary};\n      }\n    }\n  `;\n\n  const WrappedComponent: React.FC<T & { className?: string } & AnchorHTMLAttributes<T>> = ({ className, href, ...props }) => (\n    <IconAsAnchor className={className} href={href} target=\"_blank\">\n      <Component {...props as T} />\n    </IconAsAnchor>\n  );\n\n  return styled(WrappedComponent)``;\n};\n\nexport default asLink;\n","import React from 'react';\nimport wrap, { IconCommonInterface } from './iconWrap';\n\nconst IconLinkedin: React.FC<IconCommonInterface> = ({\n  size\n}) => (\n  <svg width={size} height={size}  fill=\"none\" viewBox={'0 0 22 21'} xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4.92446 20.9995H0.363393V6.97921H4.92446V20.9995ZM2.64147 5.06671C1.18299 5.06671 0 3.91359 0 2.5214C1.04392e-08 1.85269 0.278297 1.21136 0.77367 0.738502C1.26904 0.265647 1.94091 0 2.64147 0C3.34204 0 4.0139 0.265647 4.50928 0.738502C5.00465 1.21136 5.28295 1.85269 5.28295 2.5214C5.28295 3.91359 4.09946 5.06671 2.64147 5.06671ZM21.9951 20.9995H17.4438V14.1745C17.4438 12.548 17.4095 10.462 15.0725 10.462C12.7011 10.462 12.3377 12.2292 12.3377 14.0573V20.9995H7.78152V6.97921H12.156V8.89171H12.2198C12.8287 7.79015 14.3162 6.62765 16.5354 6.62765C21.1514 6.62765 22 9.52921 22 13.298V20.9995H21.9951Z\"\n      fill=\"currentColor\"/>\n  </svg>\n);\n\nexport default wrap(IconLinkedin);\n","import React from 'react';\nimport asLink from '@saulo.dev/ui/src/components/icons/iconAsLink';\nimport IconLinkedin from '@saulo.dev/ui/src/components/icons/IconLinkedin';\nimport styled from 'styled-components';\n\nconst Link = 'https://www.linkedin.com/in/saulo-furuta-386a76b4/';\nconst LinkLinkedinStyled = asLink(IconLinkedin);\nconst LinkLinkedin: React.FC<{ className?: string }> = ({ className }) => (\n  <LinkLinkedinStyled\n    href={Link}\n    className={className}\n    size={20}\n    color=\"highlight1\"\n  />\n);\n\nexport default styled(LinkLinkedin)``;\n","import React from 'react';\nimport wrap, { IconCommonInterface } from './iconWrap';\n\nconst IconEmail: React.FC<IconCommonInterface> = ({\n  size\n}) => (\n  <svg width={size} height={size}  fill=\"none\" viewBox={'0 0 22 24'} xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M6.11111 21C5.13333 21 4.15556 19.95 3.66667 19.5C1.22222 17.4 0.488889 16.65 0 16.2V22.5C0 23.3283 0.547326 24 1.22222 24H11C11.6749 24 12.2222 23.3283 12.2222 22.5V16.2C11.7333 16.65 11 17.4 8.55556 19.5C8.06667 19.95 7.08889 21 6.11111 21ZM11 12H1.22222C0.547326 12 0 12.6717 0 13.5V14.25C0.977778 15.15 0.855555 15.15 4.4 18.3C4.76667 18.6 5.5 19.5 6.11111 19.5C6.72222 19.5 7.45556 18.6 7.82222 18.45C11.3667 15.3 11.2444 15.3 12.2222 14.4V13.5C12.2222 12.6717 11.6749 12 11 12ZM20.7778 7.5H8.55556C7.88066 7.5 7.33333 8.17172 7.33333 9V10.5H11C12.2684 10.5 13.3142 11.6916 13.4334 13.2103L13.4444 13.2V19.5H20.7778C21.4527 19.5 22 18.8283 22 18V9C22 8.17172 21.4527 7.5 20.7778 7.5ZM19.5556 13.5H17.1111V10.5H19.5556V13.5ZM6.11111 9C6.11111 7.34578 7.20767 6 8.55556 6H17.1111V1.5C17.1111 0.671719 16.5638 0 15.8889 0H3.66667C2.99177 0 2.44444 0.671719 2.44444 1.5V10.5H6.11111V9Z\"\n      fill=\"currentColor\"/>\n  </svg>\n);\n\nexport default wrap(IconEmail);\n","import React from 'react';\nimport asLink from '@saulo.dev/ui/src/components/icons/iconAsLink';\nimport IconEmail from '@saulo.dev/ui/src/components/icons/IconEmail';\nimport styled from 'styled-components';\n\nconst EMAIL_LINK =\n  'mailto:hello@saulo.dev?Subject=Heeeey%2C%20I%27m%20sending%20this%20because...';\nconst LinkEmailStyled = asLink(IconEmail);\nconst LinkEmail: React.FC<{ className?: string }> = ({ className }) => (\n  <LinkEmailStyled\n    className={className}\n    href={EMAIL_LINK}\n    size={20}\n    color=\"highlight1\"\n  />\n);\n\nexport default styled(LinkEmail)``;\n","import React from 'react';\nimport wrap, { IconCommonInterface } from './iconWrap';\n\nconst IconGithub: React.FC<IconCommonInterface> = ({\n  size\n}) => (\n  <svg width={size} height={size}  fill=\"none\" viewBox={'0 0 22 24'} xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M7.35847 18.2531C7.35847 18.3469 7.25645 18.4219 7.12782 18.4219C6.98145 18.4359 6.87944 18.3609 6.87944 18.2531C6.87944 18.1594 6.98145 18.0844 7.11008 18.0844C7.24314 18.0703 7.35847 18.1453 7.35847 18.2531ZM5.97903 18.0422C5.94798 18.1359 6.03669 18.2437 6.16976 18.2719C6.28508 18.3187 6.41815 18.2719 6.44476 18.1781C6.47137 18.0844 6.3871 17.9766 6.25403 17.9344C6.13871 17.9016 6.01008 17.9484 5.97903 18.0422ZM7.93952 17.9625C7.81089 17.9953 7.72218 18.0844 7.73548 18.1922C7.74879 18.2859 7.86411 18.3469 7.99718 18.3141C8.12581 18.2812 8.21452 18.1922 8.20121 18.0984C8.1879 18.0094 8.06814 17.9484 7.93952 17.9625ZM10.8581 0C4.70605 0 0 4.93594 0 11.4375C0 16.6359 3.09597 21.0844 7.51815 22.65C8.08589 22.7578 8.28548 22.3875 8.28548 22.0828C8.28548 21.7922 8.27218 20.1891 8.27218 19.2047C8.27218 19.2047 5.16734 19.9078 4.51532 17.8078C4.51532 17.8078 4.00968 16.4437 3.28226 16.0922C3.28226 16.0922 2.26653 15.3562 3.35323 15.3703C3.35323 15.3703 4.45766 15.4641 5.06532 16.5797C6.03669 18.3891 7.66452 17.8687 8.29879 17.5594C8.40081 16.8094 8.68911 16.2891 9.00847 15.9797C6.52903 15.6891 4.02742 15.3094 4.02742 10.8C4.02742 9.51094 4.36452 8.86406 5.07419 8.03906C4.95887 7.73438 4.58185 6.47812 5.18952 4.85625C6.11653 4.55156 8.25 6.12188 8.25 6.12188C9.1371 5.85938 10.0907 5.72344 11.0355 5.72344C11.9802 5.72344 12.9339 5.85938 13.821 6.12188C13.821 6.12188 15.9544 4.54688 16.8815 4.85625C17.4891 6.48281 17.1121 7.73438 16.9968 8.03906C17.7065 8.86875 18.1411 9.51562 18.1411 10.8C18.1411 15.3234 15.5286 15.6844 13.0492 15.9797C13.4573 16.35 13.8032 17.0531 13.8032 18.1547C13.8032 19.7344 13.7899 21.6891 13.7899 22.0734C13.7899 22.3781 13.994 22.7484 14.5573 22.6406C18.9927 21.0844 22 16.6359 22 11.4375C22 4.93594 17.0101 0 10.8581 0ZM4.31129 16.1672C4.25363 16.2141 4.26694 16.3219 4.34234 16.4109C4.41331 16.4859 4.51532 16.5188 4.57298 16.4578C4.63064 16.4109 4.61734 16.3031 4.54194 16.2141C4.47097 16.1391 4.36895 16.1062 4.31129 16.1672ZM3.83226 15.7875C3.80121 15.8484 3.84556 15.9234 3.93427 15.9703C4.00524 16.0172 4.09395 16.0031 4.125 15.9375C4.15605 15.8766 4.11169 15.8016 4.02298 15.7547C3.93427 15.7266 3.86331 15.7406 3.83226 15.7875ZM5.26935 17.4562C5.19839 17.5172 5.225 17.6578 5.32702 17.7469C5.42903 17.8547 5.55766 17.8687 5.61532 17.7938C5.67298 17.7328 5.64637 17.5922 5.55766 17.5031C5.46008 17.3953 5.32702 17.3813 5.26935 17.4562ZM4.76371 16.7672C4.69274 16.8141 4.69274 16.9359 4.76371 17.0438C4.83468 17.1516 4.95444 17.1984 5.0121 17.1516C5.08306 17.0906 5.08306 16.9688 5.0121 16.8609C4.95 16.7531 4.83468 16.7063 4.76371 16.7672Z\"\n      fill=\"currentColor\"/>\n  </svg>\n);\n\nexport default wrap(IconGithub);\n","import React from 'react';\nimport asLink from '@saulo.dev/ui/src/components/icons/iconAsLink';\nimport IconGithub from '@saulo.dev/ui/src/components/icons/IconGithub';\nimport styled from 'styled-components';\n\nconst GITHUB_LINK = 'https://github.com/sauloxd';\nconst LinkGithubStyled = asLink(IconGithub);\nconst LinkGithub: React.FC<{ className?: string }> = ({ className }) => (\n  <LinkGithubStyled\n    className={className}\n    href={GITHUB_LINK}\n    size={20}\n    color=\"highlight1\"\n  />\n);\n\nexport default styled(LinkGithub)``;\n","import React from 'react';\nimport {\n  Grid,\n  CenterSingleColumn,\n} from '@saulo.dev/ui/src/components/layout/Grid';\nimport Avatar from '@saulo.dev/ui/src/components/avatar/Avatar';\nimport SpanText from '@saulo.dev/ui/src/components/typography/SpanText';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport withNavbar from '../hocs/withNavbar';\nimport withGlobalStyles from '@saulo.dev/ui/src/services/withGlobalStyles';\nimport useMedia from '@saulo.dev/ui/src/services/useMedia';\nimport LinkLinkedin from '../components/links/LinkLinkedin';\nimport LinkEmail from '../components/links/LinkEmail';\nimport LinkGithub from '../components/links/LinkGithub';\n\nconst NamePosition = styled.div``;\nconst CaptionPosition = styled.div``;\nconst HomeGrid = styled(CenterSingleColumn)`\n  margin: ${(p) => p.theme.spaces.px24};\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  ${NamePosition} {\n    margin-top: ${(p) => p.theme.spaces.px16};\n    margin-bottom: ${(p) => p.theme.spaces.px24};\n  }\n  ${CaptionPosition} {\n    margin-bottom: ${(p) => p.theme.spaces.px12};\n  }\n`;\nconst FooterGrid = styled.div`\n  display: flex;\n  justify-content: center;\n  grid-row: footer-start / footer-end;\n  grid-column: content-start / content-end;\n  margin-bottom: ${(p) => p.theme.spaces.px12};\n\n  ${LinkGithub}, ${LinkEmail} {\n    margin-right: ${(p) => p.theme.spaces.px24};\n  }\n`;\nconst GridStyled = styled(Grid)`\n  height: 100%;\n  grid-template-rows: [content-start] 1fr [content-end footer-start] auto [footer-end];\n`;\nconst RootPage: React.FC = () => {\n  const tablet = useMedia('(max-width: 900px)');\n\n  return (\n    <>\n      <Helmet>\n        <title>{'\\u2B21 \\u2B22'}</title>\n      </Helmet>\n      <GridStyled>\n        <HomeGrid>\n          <Avatar size={tablet ? 250 : 320} />\n          <NamePosition>\n            <SpanText color=\"secondary\">import</SpanText>\n            <SpanText color=\"neutral\">{' {'}</SpanText>\n            <div style={{ textAlign: 'center' }}>\n              <SpanText color=\"primary\" size=\"px36\">\n                SauloFuruta\n              </SpanText>\n            </div>\n            <SpanText color=\"neutral\">{'} '}</SpanText>\n            <SpanText color=\"secondary\">from</SpanText>\n            <SpanText color=\"highlight2\">{` '@QultureRocks/${\n              tablet ? '' : 'devs/'\n            }frontend'`}</SpanText>\n          </NamePosition>\n          <CaptionPosition>\n            <SpanText color=\"secondaryAccessory\" size=\"px16\">\n              Software Engineer\n            </SpanText>\n          </CaptionPosition>\n          <CaptionPosition>\n            <SpanText color=\"highlight1\" size=\"px12\">\n              Trying to build things, one coffee at a time\n            </SpanText>\n          </CaptionPosition>\n        </HomeGrid>\n        <FooterGrid>\n          <LinkGithub />\n          <LinkEmail />\n          <LinkLinkedin />\n        </FooterGrid>\n      </GridStyled>\n    </>\n  );\n};\n\nexport default withGlobalStyles(withNavbar(RootPage));\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ColorKeys } from '../../theme/colors';\n\ntype Layer = { color: ColorKeys; innerPiece?: (index: number) => React.ReactElement; border?: number };\n\ninterface HexagonProps {\n  size: number;\n  layers?: (ColorKeys | Layer)[];\n  className?: string;\n  getInsidePiece?: (index: number) => React.ReactElement;\n}\n\nconst HexagonContainer = styled.div<HexagonProps>`\n  height: ${p => p.size}px;\n  width: ${p => (p.size * Math.sqrt(3))/2}px;\n  position: relative;\n`;\n\ninterface HexagonPieceProps {\n  index: number;\n  color: ColorKeys;\n  size: number;\n}\n\nconst HexagonPiece = styled.div<HexagonPieceProps>`\n  height: ${p => p.size/2}px;\n  width: ${p => (p.size * Math.sqrt(3))/2}px;\n  position: absolute;\n  background-color: ${p => p.theme.colors[p.color] || p.theme.colors.primary};\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) ${p => `rotate(${p.index * 60}deg)`};\n  overflow: hidden;\n`;\n\nconst Hexagon: React.FC<HexagonProps> = ({ size, layers, className }) => {\n  const defaultLayer = { color: layers[0], innerPiece: (): null => null, border: 18 };\n  const { color, innerPiece } = typeof layers[0] === 'object' ? { ...defaultLayer, ...layers[0] } : defaultLayer;\n  return (\n    <div className={className}>\n      <HexagonContainer size={size}>\n        <HexagonPiece size={size} index={0} color={color as ColorKeys}>{innerPiece(0)}</HexagonPiece>\n        <HexagonPiece size={size} index={1} color={color as ColorKeys}>{innerPiece(1)}</HexagonPiece>\n        <HexagonPiece size={size} index={2} color={color as ColorKeys}>{innerPiece(2)}</HexagonPiece>\n        {layers[1] && <InnerLayer\n          size={size - ((layers[1] as Layer).border || 18)}\n          layers={layers.slice(1)}\n        />}\n      </HexagonContainer>\n    </div>\n  );\n};\n\nconst InnerLayer = styled(Hexagon)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport default Hexagon;\n"],"names":["StyledImg","styled","p","size","Math","sqrt","index","src","Hexagon","layers","color","innerPiece","MePng","query","useState","matches","setMatches","useEffect","media","window","matchMedia","listener","addListener","removeListener","Component","IconAsAnchor","theme","colors","primary","className","href","props","target","wrap","width","height","fill","viewBox","xmlns","d","LinkLinkedinStyled","asLink","IconLinkedin","LinkEmailStyled","IconEmail","LinkGithubStyled","IconGithub","NamePosition","CaptionPosition","HomeGrid","CenterSingleColumn","spaces","px24","px16","px12","FooterGrid","LinkGithub","LinkEmail","GridStyled","Grid","withGlobalStyles","withNavbar","tablet","useMedia","Helmet","SpanText","style","textAlign","HexagonContainer","HexagonPiece","defaultLayer","border","InnerLayer","slice"],"sourceRoot":""}