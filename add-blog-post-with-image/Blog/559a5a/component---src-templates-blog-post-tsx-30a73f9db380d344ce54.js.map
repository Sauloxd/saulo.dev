{"version":3,"file":"component---src-templates-blog-post-tsx-30a73f9db380d344ce54.js","mappings":"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","sources":["webpack://@saulo.dev/blog/../ui/src/components/typography/H3.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H4.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/A.tsx","webpack://@saulo.dev/blog/../ui/src/components/lists/Ul.tsx","webpack://@saulo.dev/blog/../ui/src/components/lists/Li.tsx","webpack://@saulo.dev/blog/./src/templates/blog-post.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H1.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H2.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst H3Styled = styled.h3`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px24};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.secondaryAccessory};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H3Props {\n  children: React.ReactNode;\n}\n\nconst H3: React.FC<H3Props> = ({\n  children\n}) => {\n  return (\n    <H3Styled>\n      {children}\n    </H3Styled>\n  );\n};\n\nexport default H3;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H4Styled = styled.h4`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px18};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.primary};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H4Props {\n  children: React.ReactNode;\n}\n\nconst H4: React.FC<H4Props> = ({\n  children\n}) => {\n  return (\n    <H4Styled>\n      {children}\n    </H4Styled>\n  );\n};\n\nexport default H4;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst AStyled = styled.a`\n  text-decoration: underline;\n  color: inherit;\n`;\n\ninterface AProps {\n  children: React.ReactNode;\n}\n\nconst A: React.FC<AProps> = ({style, ...props}) => {\n  return <AStyled target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n}\n\nexport default A;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst UlStyled = styled.ul`\n  list-style-type: none;\n`\n\n\nconst Ul = ({...props}) => {\n  return <UlStyled {...props}/>\n}\n\nexport default Ul\n","import React from 'react';\nimport SpanText from '../typography/SpanText';\n\nconst Li: React.FC = ({ children, ...props }) => {\n  return (\n    <li {...props}>\n      <SpanText color=\"primary\" size=\"px16\" fontWeight='bold'>\n        {'- '}\n      </SpanText>\n      <SpanText color=\"neutral\" size=\"px16\">\n        {children}\n      </SpanText>\n    </li>\n  )\n}\n\nexport default Li\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  CenterSingleColumn,\n} from '@saulo.dev/ui/src/components/layout/Grid';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport H1 from '@saulo.dev/ui/src/components/typography/H1';\nimport H2 from '@saulo.dev/ui/src/components/typography/H2';\nimport H3 from '@saulo.dev/ui/src/components/typography/H3';\nimport H4 from '@saulo.dev/ui/src/components/typography/H4';\nimport A from '@saulo.dev/ui/src/components/typography/A';\nimport Ul from '@saulo.dev/ui/src/components/lists/Ul';\nimport Li from '@saulo.dev/ui/src/components/lists/Li';\nimport SpanText from '@saulo.dev/ui/src/components/typography/SpanText';\nimport withNavbar from '../hocs/withNavbar';\nimport withGlobalStyles from '@saulo.dev/ui/src/services/withGlobalStyles';\nimport { BlogPostQuery } from '../../types/graphql-types';\n\nconst GridStyled = styled(Grid)`\n  padding: ${(p) => p.theme.spaces.px24};\n`;\nconst PageTitle = styled(H1)`\n  margin-bottom: 0;\n`;\nconst PostContainer = styled.div`\n  margin-top: ${(p) => p.theme.spaces.px24};\n  margin-bottom: ${(p) => p.theme.spaces.px36};\n`;\nconst P: React.FC = ({ children }) => (\n  <SpanText color=\"neutral\" size=\"px16\">\n    {children}\n  </SpanText>\n);\nconst Code: React.FC = ({ children }) => (\n  <SpanText color=\"highlight2\" size=\"px16\">\n    {children}\n  </SpanText>\n);\nconst Strong: React.FC = ({ children }) => (\n  <SpanText color=\"primaryAccessory\" fontWeight=\"bold\">\n    {children}\n  </SpanText>\n);\nconst Italic: React.FC = ({ children }) => (\n  <em>\n    <SpanText color=\"highlight1\">{children}</SpanText>\n  </em>\n);\nconst elementComponentMap = {\n  a: A,\n  h1: H2,\n  h2: H3,\n  h3: H4,\n  p: P,\n  ul: Ul,\n  li: Li,\n  span: ({ children, className, style }: any) => (\n    <span {...{ children, className }} />\n  ),\n  img: ({ children, style, ...props}: any) => console.log(props) || <img src={props.src} />,\n  ol: (props: any) => <ol {...props} />,\n  code: Code,\n  strong: Strong,\n  em: Italic,\n  blockquote: Strong,\n};\nconst zipWithLineSoftBreak = (array: string[]) =>\n  array.reduce((withLineBreak, item, index, array) => {\n    if (array.length === index + 1) return withLineBreak.concat(item);\n\n    return withLineBreak.concat(item).concat('softbreak');\n  }, []);\nconst Text: React.FC = ({ children }) => {\n  const childrenIsStringBelieveIt = children as string;\n  if (children === '\\n') return <div style={{ marginTop: 16 }} />;\n  const byLinebreak = childrenIsStringBelieveIt.split('\\n');\n  if (byLinebreak.length === 1)\n    return (\n      <span key={childrenIsStringBelieveIt}>{childrenIsStringBelieveIt}</span>\n    );\n  const withSoftLine = zipWithLineSoftBreak(byLinebreak);\n\n  return (\n    <>\n      {withSoftLine.map((line, index) => {\n        if (line === 'softbreak') return <div key={index} />;\n\n        return <Text key={line}>{line}</Text>;\n      })}\n    </>\n  );\n};\nconst typeComponentMap = {\n  root: Fragment,\n  text: Text,\n};\n\ninterface HtmlAst {\n  type: 'root' | 'text';\n  children: HtmlAst[];\n  value: string;\n  tagName:\n    | 'ul'\n    | 'a'\n    | 'h1'\n    | 'h2'\n    | 'p'\n    | 'code'\n    | 'strong'\n    | 'em'\n    | 'blockquote';\n  properties: any;\n}\n\nconst handleHtmlAst = (htmlAst: HtmlAst, key: string | number) => {\n  const { type, children, value, tagName, properties } = htmlAst;\n  const Component = tagName\n    ? elementComponentMap[tagName]\n    : typeComponentMap[type];\n\n  if (!Component) {\n    throw `The Tag: ${tagName} was not defined yet!`;\n  }\n\n  if (!children || children.length === 0) {\n    return (\n      <Component key={key} {...properties}>\n        {value}\n      </Component>\n    );\n  }\n\n  return (\n    <Component key={key} {...properties}>\n      {children.map((child, index) => handleHtmlAst(child, index))}\n    </Component>\n  );\n};\n\ninterface BlogPostPage {\n  data: BlogPostQuery;\n  location?: Location;\n}\n\nconst BlogPostPage: React.FC<BlogPostPage> = ({ data }) => {\n  const post = data.markdownRemark;\n\n  return (\n    <>\n      <Helmet>\n        <title> Blog - {post.frontmatter.title}</title>\n      </Helmet>\n      <GridStyled>\n        <CenterSingleColumn>\n          <div key={post.id}>\n            <PageTitle>{post.frontmatter.title}</PageTitle>\n            <div>\n              {post.frontmatter.tags.map((tag) => (\n                <SpanText key={tag} color=\"secondaryAccessory\" size=\"px16\">\n                  {' '}\n                  #{tag}{' '}\n                </SpanText>\n              ))}\n            </div>\n            <div>\n              <SpanText color=\"highlight1\" size=\"px12\">\n                Posted {post.frontmatter.date} - {post.timeToRead} min read{' '}\n              </SpanText>\n            </div>\n          </div>\n          <PostContainer>{handleHtmlAst(post.htmlAst, 'root')}</PostContainer>\n        </CenterSingleColumn>\n      </GridStyled>\n    </>\n  );\n};\n\nexport default withGlobalStyles(withNavbar(BlogPostPage));\n\nexport const query = graphql`\n  query BlogPost($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      htmlAst\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM, YYYY\")\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H1Styled = styled.h1`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px48};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.primary};\n  margin: ${props =>\n    props.theme.spaces.px36} 0;\n`;\n\ninterface H1Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst H1: React.FC<H1Props> = ({\n  children, className\n}) => {\n  return (\n    <H1Styled className={className}>\n      {children}\n    </H1Styled>\n  );\n};\n\nexport default H1;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H2Styled = styled.h2`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px36};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.secondary};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H2Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst H2: React.FC<H2Props> = ({\n  children,\n  className\n}) => {\n  return (\n    <H2Styled className={className}>\n      {children}\n    </H2Styled>\n  );\n};\n\nexport default styled(H2)``;\n"],"names":["H3Styled","styled","props","theme","font","family","primary","sizes","px24","weights","medium","colors","secondaryAccessory","spaces","px0","children","H4Styled","px18","AStyled","style","target","rel","UlStyled","SpanText","color","size","fontWeight","GridStyled","Grid","p","PageTitle","H1","PostContainer","px36","Strong","elementComponentMap","a","A","h1","H2","h2","H3","h3","H4","ul","Ul","li","Li","span","className","img","console","log","src","ol","code","strong","em","blockquote","typeComponentMap","root","Fragment","text","Text","childrenIsStringBelieveIt","marginTop","byLinebreak","split","length","key","withSoftLine","reduce","withLineBreak","item","index","array","concat","map","line","handleHtmlAst","htmlAst","type","value","tagName","properties","Component","child","withGlobalStyles","withNavbar","post","data","markdownRemark","Helmet","frontmatter","title","id","tags","tag","date","timeToRead","H1Styled","px48","H2Styled","secondary"],"sourceRoot":""}