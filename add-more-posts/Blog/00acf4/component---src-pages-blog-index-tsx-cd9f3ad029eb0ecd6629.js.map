{"version":3,"file":"component---src-pages-blog-index-tsx-cd9f3ad029eb0ecd6629.js","mappings":"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","sources":["webpack://@saulo.dev/blog/./src/pages/blog/index.tsx","webpack://@saulo.dev/blog/../ui/src/components/hexagon/Hexagon.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H1.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H2.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  CenterSingleColumn,\n} from '@saulo.dev/ui/src/components/layout/Grid';\nimport styled from 'styled-components';\nimport H1 from '@saulo.dev/ui/src/components/typography/H1';\nimport Helmet from 'react-helmet';\nimport SpanText from '@saulo.dev/ui/src/components/typography/SpanText';\nimport H2 from '@saulo.dev/ui/src/components/typography/H2';\nimport { graphql, Link } from 'gatsby';\nimport Hexagon from '@saulo.dev/ui/src/components/hexagon/Hexagon';\nimport withNavbar from '../../hocs/withNavbar';\nimport withGlobalStyles from '@saulo.dev/ui/src/services/withGlobalStyles';\nimport { BlogHomePageQuery } from '../../../types/graphql-types';\n\nconst GridStyled = styled(Grid)`\n  padding: ${(p) => p.theme.spaces.px24};\n`;\nconst H1Subtitle = styled(SpanText)`\n  display: block;\n  margin-top: ${(p) => p.theme.spaces.px12};\n`;\nconst PostLinkStyled = styled(Link)`\n  :link {\n    text-decoration: none;\n  }\n  ${H2} {\n    cursor: pointer;\n    :hover {\n      text-decoration: underline;\n    }\n  }\n`;\nconst HexagonStyled = styled(Hexagon)`\n  margin-left: 0.5em;\n`;\n\ninterface BlogPage {\n  data: BlogHomePageQuery;\n  location: Location;\n}\n\nconst BlogPage: React.FC<BlogPage> = ({ data }) => {\n  const blogPosts = data.allMarkdownRemark.edges;\n\n  return (\n    <>\n      <Helmet>\n        <title>{'\\u2B22 \\u2B21'} Blog</title>\n      </Helmet>\n      <GridStyled>\n        <CenterSingleColumn>\n          <H1>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              {'A place to reflect  '}\n              <HexagonStyled\n                layers={[\n                  'primaryAccessory',\n                  { color: 'primary', border: 8 },\n                  { color: 'primaryAccessory', border: 8 },\n                ]}\n                size={48}\n              />\n            </div>\n            <H1Subtitle color=\"neutral\" size=\"px16\">\n              This is where I talk about stuff. Maybe itâ€™s about me, maybe its a\n              curated list of something, sometimes about tech\n            </H1Subtitle>\n          </H1>\n          {blogPosts.map(({ node: post }) => {\n            return (\n              <div key={post.id} style={{ marginTop: 24 }}>\n                <PostLinkStyled to={post.fields.slug}>\n                  <H2>{post.frontmatter.title}</H2>\n                </PostLinkStyled>\n                <div>\n                  {post.frontmatter.tags.map((tag) => (\n                    <SpanText key={tag} color=\"secondaryAccessory\" size=\"px16\">\n                      {' '}\n                      #{tag}{' '}\n                    </SpanText>\n                  ))}\n                </div>\n                <div>\n                  <SpanText color=\"highlight1\" size=\"px12\">\n                    Posted {post.frontmatter.date} - {post.timeToRead} min read{' '}\n                  </SpanText>\n                </div>\n                <div>\n                  <SpanText color=\"neutral\" size=\"px16\">\n                    {post.frontmatter.description}\n                  </SpanText>\n                </div>\n              </div>\n            );\n          })}\n        </CenterSingleColumn>\n      </GridStyled>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query BlogHomePage {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default withGlobalStyles(withNavbar(BlogPage));\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ColorKeys } from '../../theme/colors';\n\ntype Layer = { color: ColorKeys; innerPiece?: (index: number) => React.ReactElement; border?: number };\n\ninterface HexagonProps {\n  size: number;\n  layers?: (ColorKeys | Layer)[];\n  className?: string;\n  getInsidePiece?: (index: number) => React.ReactElement;\n}\n\nconst HexagonContainer = styled.div<HexagonProps>`\n  height: ${p => p.size}px;\n  width: ${p => (p.size * Math.sqrt(3))/2}px;\n  position: relative;\n`;\n\ninterface HexagonPieceProps {\n  index: number;\n  color: ColorKeys;\n  size: number;\n}\n\nconst HexagonPiece = styled.div<HexagonPieceProps>`\n  height: ${p => p.size/2}px;\n  width: ${p => (p.size * Math.sqrt(3))/2}px;\n  position: absolute;\n  background-color: ${p => p.theme.colors[p.color] || p.theme.colors.primary};\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) ${p => `rotate(${p.index * 60}deg)`};\n  overflow: hidden;\n`;\n\nconst Hexagon: React.FC<HexagonProps> = ({ size, layers, className }) => {\n  const defaultLayer = { color: layers[0], innerPiece: (): null => null, border: 18 };\n  const { color, innerPiece } = typeof layers[0] === 'object' ? { ...defaultLayer, ...layers[0] } : defaultLayer;\n  return (\n    <div className={className}>\n      <HexagonContainer size={size}>\n        <HexagonPiece size={size} index={0} color={color as ColorKeys}>{innerPiece(0)}</HexagonPiece>\n        <HexagonPiece size={size} index={1} color={color as ColorKeys}>{innerPiece(1)}</HexagonPiece>\n        <HexagonPiece size={size} index={2} color={color as ColorKeys}>{innerPiece(2)}</HexagonPiece>\n        {layers[1] && <InnerLayer\n          size={size - ((layers[1] as Layer).border || 18)}\n          layers={layers.slice(1)}\n        />}\n      </HexagonContainer>\n    </div>\n  );\n};\n\nconst InnerLayer = styled(Hexagon)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport default Hexagon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H1Styled = styled.h1`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px48};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.primary};\n  margin: ${props =>\n    props.theme.spaces.px36} 0;\n`;\n\ninterface H1Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst H1: React.FC<H1Props> = ({\n  children, className\n}) => {\n  return (\n    <H1Styled className={className}>\n      {children}\n    </H1Styled>\n  );\n};\n\nexport default H1;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H2Styled = styled.h2`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px36};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.secondary};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H2Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst H2: React.FC<H2Props> = ({\n  children,\n  className\n}) => {\n  return (\n    <H2Styled className={className}>\n      {children}\n    </H2Styled>\n  );\n};\n\nexport default styled(H2)``;\n"],"names":["GridStyled","styled","Grid","withConfig","p","theme","spaces","px24","H1Subtitle","SpanText","px12","PostLinkStyled","Link","H2","HexagonStyled","Hexagon","withGlobalStyles","withNavbar","blogPosts","data","allMarkdownRemark","edges","React","Helmet","CenterSingleColumn","H1","style","display","alignItems","layers","color","border","size","map","post","node","key","id","marginTop","to","fields","slug","frontmatter","title","tags","tag","date","timeToRead","description","HexagonContainer","Math","sqrt","HexagonPiece","colors","primary","index","className","defaultLayer","innerPiece","InnerLayer","slice","H1Styled","props","font","family","sizes","px48","weights","medium","px36","children","H2Styled","secondary","px0"],"sourceRoot":""}