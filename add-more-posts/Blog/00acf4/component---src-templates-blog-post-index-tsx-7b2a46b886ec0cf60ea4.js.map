{"version":3,"file":"component---src-templates-blog-post-index-tsx-7b2a46b886ec0cf60ea4.js","mappings":"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","sources":["webpack://@saulo.dev/blog/./src/templates/blog-post/styles.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H3.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H4.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/A.tsx","webpack://@saulo.dev/blog/../ui/src/components/lists/Ul.tsx","webpack://@saulo.dev/blog/../ui/src/components/lists/Li.tsx","webpack://@saulo.dev/blog/../ui/src/components/lists/Ol.tsx","webpack://@saulo.dev/blog/./src/templates/blog-post/elementComponentMap.tsx","webpack://@saulo.dev/blog/./src/templates/blog-post/handleHtmlAst.tsx","webpack://@saulo.dev/blog/./src/templates/blog-post/index.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H1.tsx","webpack://@saulo.dev/blog/../ui/src/components/typography/H2.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Grid } from '@saulo.dev/ui/src/components/layout/Grid';\nimport H1 from '@saulo.dev/ui/src/components/typography/H1';\n\nexport const GridStyled = styled(Grid)`\n  padding: ${(p) => p.theme.spaces.px24};\n`;\nexport const PageTitle = styled(H1)`\n  margin-bottom: 0;\n`;\nexport const PostContainer = styled.div`\n  margin-top: ${(p) => p.theme.spaces.px24};\n  margin-bottom: ${(p) => p.theme.spaces.px36};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H3Styled = styled.h3`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px24};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.secondaryAccessory};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H3Props {\n  children: React.ReactNode;\n}\n\nconst H3: React.FC<H3Props> = ({\n  children\n}) => {\n  return (\n    <H3Styled>\n      {children}\n    </H3Styled>\n  );\n};\n\nexport default H3;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H4Styled = styled.h4`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px18};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.primary};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H4Props {\n  children: React.ReactNode;\n}\n\nconst H4: React.FC<H4Props> = ({\n  children\n}) => {\n  return (\n    <H4Styled>\n      {children}\n    </H4Styled>\n  );\n};\n\nexport default H4;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst AStyled = styled.a`\n  text-decoration: underline;\n  color: inherit;\n`;\n\ninterface AProps {\n  children?: React.ReactNode;\n  style?: string;\n}\n\nconst A: React.FC<AProps> = (props = {}) => {\n  const { style, ...propsWithoutStyle } = props;\n  const ref = useRef<HTMLAnchorElement>(null);\n\n  useEffect(() => {\n    if(ref.current) {\n      ref.current.style.cssText = style\n    }\n\n  }, [ref.current])\n\n  return (\n    <AStyled\n      ref={ref}\n      target=\"_blank\" rel=\"noopener noreferrer\"\n      {...propsWithoutStyle}\n    />\n  );\n}\n\nexport default A;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst UlStyled = styled.ul`\n  list-style-type: none;\n`;\nconst Ul = ({ ...props }) => {\n  return <UlStyled {...props} />;\n};\n\nexport default Ul;\n","import React from 'react';\nimport SpanText from '../typography/SpanText';\n\nconst Li: React.FC = ({ children, ...props }) => {\n  return (\n    <li {...props}>\n      <SpanText color=\"primary\" size=\"px16\" fontWeight='bold'>\n        {'- '}\n      </SpanText>\n      <SpanText color=\"neutral\" size=\"px16\">\n        {children}\n      </SpanText>\n    </li>\n  )\n}\n\nexport default Li\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst OlStyled = styled.ol`\n  list-style-type: none;\n`;\nconst Ol = ({ ...props }) => {\n  return <OlStyled {...props} />;\n};\n\nexport default Ol;\n","import React, { useEffect, useRef } from 'react';\nimport H2 from '@saulo.dev/ui/src/components/typography/H2';\nimport H3 from '@saulo.dev/ui/src/components/typography/H3';\nimport H4 from '@saulo.dev/ui/src/components/typography/H4';\nimport A from '@saulo.dev/ui/src/components/typography/A';\nimport Ul from '@saulo.dev/ui/src/components/lists/Ul';\nimport Li from '@saulo.dev/ui/src/components/lists/Li';\nimport Ol from '@saulo.dev/ui/src/components/lists/Ol';\nimport SpanText from '@saulo.dev/ui/src/components/typography/SpanText';\n\nconst P: React.FC = ({ children }) => (\n  <SpanText color=\"neutral\" size=\"px16\">\n    {children}\n  </SpanText>\n);\nconst Code: React.FC = ({ children }) => (\n  <SpanText color=\"highlight2\" size=\"px16\">\n    {children}\n  </SpanText>\n);\nconst Strong: React.FC = ({ children }) => (\n  <SpanText color=\"primaryAccessory\" fontWeight=\"bold\">\n    {children}\n  </SpanText>\n);\nconst Italic: React.FC = ({ children }) => (\n  <em>\n    <SpanText color=\"highlight1\">{children}</SpanText>\n  </em>\n);\nconst Img: React.FC<any> = ({ style, ...propsWithoutStyle }) => {\n  const ref = useRef<HTMLImageElement>();\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.cssText = style;\n    }\n  }, [ref.current]);\n\n  return <img ref={ref} {...propsWithoutStyle} />;\n};\nconst elementComponentMap = {\n  a: A,\n  h1: H2,\n  h2: H3,\n  h3: H4,\n  p: P,\n  ul: Ul,\n  li: Li,\n  ol: Ol,\n  span: SpanText,\n  img: Img,\n  code: Code,\n  strong: Strong,\n  em: Italic,\n  blockquote: Strong,\n  del: (props: any) => <del {...props} />,\n  pre: (props: any) => <pre {...props} />,\n};\n\nexport default elementComponentMap;\n","import React, { Fragment } from 'react';\nimport elementComponentMap from './elementComponentMap';\n\nconst zipWithLineSoftBreak = (array: string[]) =>\n  array.reduce((withLineBreak, item, index, array) => {\n    if (array.length === index + 1) return withLineBreak.concat(item);\n\n    return withLineBreak.concat(item).concat('softbreak');\n  }, []);\nconst Text: React.FC = ({ children }) => {\n  const childrenIsStringBelieveIt = children as string;\n  if (children === '\\n') return <div style={{ marginTop: 16 }} />;\n  const byLinebreak = childrenIsStringBelieveIt.split('\\n');\n  if (byLinebreak.length === 1)\n    return (\n      <span key={childrenIsStringBelieveIt}>{childrenIsStringBelieveIt}</span>\n    );\n  const withSoftLine = zipWithLineSoftBreak(byLinebreak);\n\n  return (\n    <>\n      {withSoftLine.map((line, index) => {\n        if (line === 'softbreak') return <div key={index} />;\n\n        return <Text key={line}>{line}</Text>;\n      })}\n    </>\n  );\n};\nconst typeComponentMap = {\n  root: Fragment,\n  text: Text,\n};\n\ninterface HtmlAst {\n  type: 'root' | 'text';\n  children: HtmlAst[];\n  value: string;\n  tagName:\n    | 'ul'\n    | 'a'\n    | 'h1'\n    | 'h2'\n    | 'p'\n    | 'code'\n    | 'strong'\n    | 'em'\n    | 'blockquote';\n  properties: any;\n}\n\nconst handleHtmlAst = (htmlAst: HtmlAst, key: string | number) => {\n  const { type, children, value, tagName, properties } = htmlAst;\n  const CustomComponent = tagName\n    ? elementComponentMap[tagName]\n    : typeComponentMap[type];\n\n  if (!CustomComponent) {\n    throw `The Tag: ${tagName} was not defined yet!`;\n  }\n\n  if (!children || children.length === 0) {\n    return (\n      <CustomComponent key={key} {...properties}>\n        {value}\n      </CustomComponent>\n    );\n  }\n\n  return (\n    <CustomComponent key={key} {...properties}>\n      {children.map((child, index) => handleHtmlAst(child, index))}\n    </CustomComponent>\n  );\n};\n\nexport default handleHtmlAst;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport SpanText from '@saulo.dev/ui/src/components/typography/SpanText';\nimport withNavbar from '../../hocs/withNavbar';\nimport withGlobalStyles from '@saulo.dev/ui/src/services/withGlobalStyles';\nimport { BlogPostQuery } from '../../../types/graphql-types';\nimport { GridStyled, PageTitle, PostContainer } from './styles';\nimport { CenterSingleColumn } from '@saulo.dev/ui/src/components/layout/Grid';\nimport handleHtmlAst from './handleHtmlAst';\n\ninterface BlogPostPage {\n  data: BlogPostQuery;\n  location?: Location;\n}\n\nconst BlogPostPage: React.FC<BlogPostPage> = ({ data }) => {\n  const post = data.markdownRemark;\n\n  return (\n    <>\n      <Helmet>\n        <title> Blog - {post.frontmatter.title}</title>\n      </Helmet>\n      <GridStyled>\n        <CenterSingleColumn>\n          <div key={post.id}>\n            <PageTitle>{post.frontmatter.title}</PageTitle>\n            <div>\n              {post.frontmatter.tags.map((tag) => (\n                <SpanText key={tag} color=\"secondaryAccessory\" size=\"px16\">\n                  {' '}\n                  #{tag}{' '}\n                </SpanText>\n              ))}\n            </div>\n            <div>\n              <SpanText color=\"highlight1\" size=\"px12\">\n                Posted {post.frontmatter.date} - {post.timeToRead} min read{' '}\n              </SpanText>\n            </div>\n          </div>\n          <PostContainer>{handleHtmlAst(post.htmlAst, 'root')}</PostContainer>\n        </CenterSingleColumn>\n      </GridStyled>\n    </>\n  );\n};\n\nexport default withGlobalStyles(withNavbar(BlogPostPage));\n\nexport const query = graphql`\n  query BlogPost($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      htmlAst\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM, YYYY\")\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H1Styled = styled.h1`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px48};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.primary};\n  margin: ${props =>\n    props.theme.spaces.px36} 0;\n`;\n\ninterface H1Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst H1: React.FC<H1Props> = ({\n  children, className\n}) => {\n  return (\n    <H1Styled className={className}>\n      {children}\n    </H1Styled>\n  );\n};\n\nexport default H1;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst H2Styled = styled.h2`\n  font-family: ${props =>\n    props.theme.font.family.primary};\n  font-size: ${props =>\n    props.theme.font.sizes.px36};\n  font-weight: ${props =>\n    props.theme.font.weights.medium};\n  color: ${props =>\n    props.theme.colors.secondary};\n  margin: ${props =>\n    props.theme.spaces.px0};\n`;\n\ninterface H2Props {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst H2: React.FC<H2Props> = ({\n  children,\n  className\n}) => {\n  return (\n    <H2Styled className={className}>\n      {children}\n    </H2Styled>\n  );\n};\n\nexport default styled(H2)``;\n"],"names":["GridStyled","styled","Grid","withConfig","p","theme","spaces","px24","PageTitle","H1","PostContainer","px36","H3Styled","props","font","family","primary","sizes","weights","medium","colors","secondaryAccessory","px0","children","React","H4Styled","px18","AStyled","style","propsWithoutStyle","ref","useRef","useEffect","current","cssText","target","rel","UlStyled","SpanText","color","size","fontWeight","OlStyled","Strong","a","A","h1","H2","h2","H3","h3","H4","ul","Ul","li","Li","ol","Ol","span","img","code","strong","em","blockquote","del","pre","typeComponentMap","root","Fragment","text","Text","childrenIsStringBelieveIt","marginTop","byLinebreak","split","length","key","withSoftLine","reduce","withLineBreak","item","index","array","concat","map","line","handleHtmlAst","htmlAst","type","value","tagName","properties","CustomComponent","elementComponentMap","child","withGlobalStyles","withNavbar","post","data","markdownRemark","Helmet","frontmatter","title","CenterSingleColumn","id","tags","tag","date","timeToRead","H1Styled","px48","className","H2Styled","secondary"],"sourceRoot":""}